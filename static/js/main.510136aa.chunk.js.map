{"version":3,"sources":["hooks/useHashLocation.js","components/PenList/index.js","components/Spinner/index.js","services/settings.js","services/getPens.js","pages/Home/index.js","hooks/usePens.js","components/Tag/index.js","components/Code/index.js","components/Buttons/index.js","components/Button/index.js","components/Editor/index.js","pages/Pen/index.js","hooks/usePen.js","components/Avatar/index.js","pages/Author/index.js","components/Logo/index.js","components/Menu/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["currentLoc","window","location","hash","replace","useHashLocation","useState","loc","setLoc","useEffect","handler","addEventListener","removeEventListener","useCallback","to","PenList","pens","className","map","id","name","description","key","Spinner","parsePens","apiResponse","list","pen","html","steps","getPens","fetch","then","res","json","Home","loading","setLoading","setPens","usePens","Tag","dangerouslySetInnerHTML","__html","Code","children","handleUpdate","codeTag","useRef","hljs","highlightBlock","current","ref","onBlur","e","target","textContent","contentEditable","suppressContentEditableWarning","autoCorrect","autoComplete","autoCapitalize","spellCheck","css","cssToParse","cssParser","parse","stringify","sourcemap","code","Buttons","Button","label","action","onClick","Editor","setCode","step","setStep","nextStep","newStep","prevStep","length","newCss","Pen","paramId","setPen","goPen","find","item","usePen","params","Avatar","url","alt","src","Author","Logo","Menu","Header","App","hook","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.510136aa.chunk.js","sourcesContent":["import {useState, useEffect, useCallback} from 'react'\n\nconst currentLoc = () => window.location.hash.replace('#', '') || '/'\n\nexport default function useHashLocation () {\n  const [loc, setLoc] = useState(currentLoc())\n\n  useEffect(() => {\n    const handler = () => setLoc(currentLoc())\n\n    // subscribe on hash changes\n    window.addEventListener(\"hashchange\", handler)\n    return () => window.removeEventListener(\"hashchange\", handler)\n  }, [])\n\n  const navigate = useCallback(to => (window.location.hash = to), [])\n  return [loc, navigate]\n}\n","import React from 'react'\nimport { Link } from 'wouter';\nimport './styles.css'\n\nexport default function PenList ({ pens }) {\n  return <div className='PenList'>\n    {pens.map(({ id, name, description }) => {\n      return <Link className='PenList__item' key={id} to={`/pen/${id}`}>\n        <div className='PenList__title'>{name}</div>\n        <div className='PenList__description'>{description}</div>\n      </Link>\n    })}\n  </div>\n}\n","import React from 'react'\nimport './styles.css'\n\nexport default function Spinner () {\n  return <div className='Spinner'></div>\n}\n","export const API_URL = './pens.json'\n","import { API_URL } from './settings'\n\nconst parsePens = apiResponse => {\n  const { list = [] } = apiResponse\n\n  const pens = list.map(pen => {\n    const { id, name, description, html, steps } = pen\n    return { id, name, description, html, steps }\n  })\n\n  return pens\n}\n\nexport default function getPens () {\n  return fetch(API_URL)\n  .then(res => res.json())\n  .then(parsePens)\n}\n","import React from 'react'\nimport PenList from '../../components/PenList'\nimport Spinner from '../../components/Spinner'\nimport { usePens } from '../../hooks/usePens'\n\nexport default function Home () {\n  const { loading, pens } = usePens()\n\n  return (\n    <div className='Page Home'>\n      {loading\n        ? <Spinner/>\n        : <PenList pens={pens} />\n      }\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport getPens from '../services/getPens'\n\nexport function usePens () {\n  const [loading, setLoading] = useState(false)\n  const [pens, setPens] = useState([])\n\n  useEffect(function () {\n    setLoading(true)\n    getPens()\n      .then(pens => {\n        setPens(pens)\n        setLoading(false)\n      })\n  }, [setPens])\n\n  return { loading, pens }\n}\n","import React from 'react'\n\nexport default function Tag ({html, className=''}) {\n  return <div className={className} dangerouslySetInnerHTML={{__html: html}} />\n}\n","import hljs from 'highlight.js'\nimport React, { useEffect, useRef } from 'react'\nimport './styles.css'\nimport 'highlight.js/styles/atom-one-dark.css'\nimport cssParser from 'css'\nimport Tag from '../Tag'\n\nexport default function Code ({children, handleUpdate}) {\n  const codeTag = useRef()\n\n  const parse = (css) => {\n    const cssToParse = cssParser.parse(css)\n    const cssResult = cssParser.stringify(cssToParse, { sourcemap: true })\n    return cssResult.code\n  }\n\n  const highlight = () => {\n    hljs.highlightBlock(codeTag.current)\n  }\n\n  const handleBlur = (e) => {\n    handleUpdate(e.target.textContent)\n  }\n\n  useEffect(() => {\n    highlight()\n  }, [children])\n\n  return (\n    <div className='Code'>\n      <pre className='Code__pre'>\n        <code\n          ref={codeTag}\n          className=\"Code__tag css\"\n          onBlur={handleBlur}\n          contentEditable=\"true\"\n          suppressContentEditableWarning=\"true\"\n          autoCorrect=\"off\"\n          autoComplete=\"off\"\n          autoCapitalize=\"off\"\n          spellCheck=\"false\">{parse(children)}</code>\n      </pre>\n\n      <Tag html={`<style>${children}</style>`} />\n    </div>\n  )\n\n}\n","import React from 'react'\nimport './styles.css'\n\nexport default function Buttons ({ children, className }) {\n  return (\n    <div className={`Buttons ${className}`}>\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport './styles.css'\n\nexport default function Button ({ label = 'button', action = null}) {\n  return (\n    <button className='Button' onClick={action}>{label}</button>\n  )\n}\n","import React, { useState } from 'react'\nimport './styles.css'\nimport Code from '../Code'\nimport Buttons from '../Buttons'\nimport Tag from '../Tag'\nimport Button from '../Button'\n\nexport default function Editor ({ pen }) {\n  const [code, setCode] = useState(pen.steps[0].code)\n  const [step, setStep] = useState(0)\n\n  const handleNext = () => {\n    if (step < pen.steps.length-1)\n      nextStep()\n  }\n\n  const handlePrev = () => {\n    if (step > 0)\n      prevStep()\n  }\n\n  const handleReset = () => {\n    setStep(0)\n    setCode(pen.steps[0].code)\n  }\n\n  const nextStep = () => {\n    const newStep = step+1\n    setStep(newStep)\n    setCode(pen.steps[newStep].code)\n  }\n\n  const prevStep = () => {\n    const newStep = step-1\n    setStep(newStep)\n    setCode(pen.steps[newStep].code)\n  }\n\n  const handleUpdate = (newCss) => {\n    setCode(newCss)\n  }\n\n  return (\n    <div className='Editor'>\n      <div className='Editor__code'>\n        <Buttons className='Editor__buttons'>\n          <Button label='← Prev' action={handlePrev} />\n          <Button label='↺ Reset' action={handleReset} />\n          <Button label='Next →' action={handleNext} />\n        </Buttons>\n\n        <div className='Editor__step-info'>\n          {pen.steps[step].description}\n        </div>\n\n        <Code handleUpdate={handleUpdate}>{code}</Code>\n      </div>\n\n      <div className='Editor__html'>\n        <Tag html={pen.html} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { usePen } from '../../hooks/usePen'\nimport Spinner from '../../components/Spinner'\nimport Editor from '../../components/Editor'\n\nexport default function Pen ({ params }) {\n  const { id } = params\n  const { loading, pen } = usePen(id)\n\n    return (\n    <div className='Pen'>\n      {loading\n      ? <Spinner/>\n      : <Editor pen={pen} />\n      }\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport getPens from '../services/getPens'\n\nexport function usePen (paramId) {\n  const id = paramId\n  const [loading, setLoading] = useState(true)\n  const [pen, setPen] = useState([])\n\n  useEffect(() => {\n    setLoading(true)\n    getPens()\n      .then(pens => {\n        const goPen = pens.find(item => item.id === id)\n        setPen(goPen)\n        setLoading(false)\n      })\n  }, [setPen, id])\n\n  return { loading, pen }\n}\n","import React from 'react'\nimport './styles.css'\n\nexport default function Avatar ({ url = null, name = null}) {\n  if (!url) return false;\n\n  return (\n    <div className='Avatar'>\n      <img className='Avatar__img' alt={name || url} src={url} />\n    </div>\n  )\n}\n","import React from 'react'\nimport Avatar from '../../components/Avatar'\n\nconst avatarManu = 'https://secure.gravatar.com/avatar/3d6f5d17df19913a7a7970923563710e'\n\nexport default function Author () {\n  return (\n    <div className='Page Author'>\n      <h2 className='Page__title'>Author</h2>\n      <Avatar url={avatarManu} />\n      <p>I'm passionate about creating applications. I have working between design and front end for more than twelve years. Doing very specific things for the Github community and managing a multidisciplinary team.</p>\n      <p>In recent years I have worked creating design systems, both in HTML development, SASS, etc. and in visual design of components using Sketch. </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'wouter'\nimport './styles.css'\n\nexport default function Logo () {\n  return <Link className='Logo' to='/'>\n    <span className='css'>CSS</span>\n    <span className='learn'>Learn</span>\n  </Link>\n}\n","import React from 'react'\nimport './styles.css'\nimport { Link } from 'wouter'\n\nexport default function Menu () {\n  return (\n    <nav className='Menu'>\n      <Link to='/' className='Menu__item'>Home</Link>\n      <Link to='/author' className='Menu__item'>Author</Link>\n    </nav>\n  )\n}\n","import React from 'react'\nimport './styles.css'\nimport Logo from '../Logo'\nimport Menu from '../Menu'\n\nexport default function Header () {\n  return (\n    <div className='Header'>\n      <div className='Header__item'><Logo /></div>\n      <div className='Header__item'><Menu/></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, Router } from 'wouter'\nimport useHashLocation from './hooks/useHashLocation'\nimport Home from './pages/Home'\nimport Pen from './pages/Pen'\nimport Author from './pages/Author'\nimport Header from './components/Header'\n\nexport default function App() {\n  return (\n    <div id='App' className='App'>\n      <Router hook={useHashLocation}>\n        <Header />\n        <Route path='/' component={Home} />\n        <Route path='/pen/:id' component={Pen} />\n        <Route path='/author' component={Author} />\n      </Router>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}