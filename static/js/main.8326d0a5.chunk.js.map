{"version":3,"sources":["hooks/useHashLocation.js","context/PensContext.js","components/Code/index.js","components/Pen/index.js","components/ListOfPens/index.js","services/settings.js","services/getPens.js","hooks/usePens.js","pages/Home/index.js","pages/Playground/index.js","pages/Author/index.js","components/Menu/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["currentLoc","window","location","hash","replace","useHashLocation","useState","loc","setLoc","useEffect","handler","addEventListener","removeEventListener","useCallback","to","Context","React","createContext","PensContextProvider","children","pens","setPens","Provider","value","Code","css","code","setCode","className","onChange","e","target","textContent","onKeyPress","contentEditable","suppressContentEditableWarning","autoCorrect","autoComplete","autoCapitalize","spellCheck","pen","name","description","page1","ListOfPens","map","key","id","parsePens","apiResponse","list","usePens","loading","setLoading","useContext","pensContext","fetch","then","res","json","Home","Playground","Author","Menu","Header","App","hook","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8326d0a5.chunk.js","sourcesContent":["import {useState, useEffect, useCallback} from 'react'\n\nconst currentLoc = () => window.location.hash.replace('#', '') ||'/';\n\nexport default function useHashLocation () {\n  const [loc, setLoc] = useState(currentLoc());\n\n  useEffect(() => {\n    const handler = () => setLoc(currentLoc());\n\n    // subscribe on hash changes\n    window.addEventListener(\"hashchange\", handler);\n    return () => window.removeEventListener(\"hashchange\", handler);\n  }, []);\n\n  const navigate = useCallback(to => (window.location.hash = to), []);\n  return [loc, navigate];\n};\n","import React, { useState } from 'react'\n\nconst Context = React.createContext({})\n\nexport function PensContextProvider ({ children }) {\n  const [pens, setPens] = useState([])\n\n  return <Context.Provider value={{pens, setPens}}>\n    {children}\n  </Context.Provider>\n}\n\nexport default Context\n","import React, { useEffect, useState } from 'react'\nimport './styles.css'\n\nexport default function Code({ css }) {\n  const [code, setCode] = useState(() => css)\n\n  const handlePress = (e) => {\n    setCode(e.target.textContent)\n  }\n\n  const handleChange = (e) => {\n    setCode(e.target.textContent)\n  }\n\n\treturn (\n    <pre className='Code'>\n      <code\n        onChange={handleChange}\n        onKeyPress={handlePress}\n        className=\"Code__tag css\"\n        contentEditable=\"true\"\n        suppressContentEditableWarning=\"true\"\n        autoCorrect=\"off\"\n        autoComplete=\"off\"\n        autoCapitalize=\"off\"\n        spellCheck=\"false\">{code}\n      </code>\n    </pre>\n  )\n}\n","import React from 'react'\nimport Code from '../Code'\nimport './styles.css'\n\nexport default function pen (pen) {\n  const { name, description, code } = pen\n  let page1 = code[0]\n\n  return (\n    <div className='Pen'>\n      <div className='Pen__title'>{name}</div>\n      <div className='Pen__description'>{description}</div>\n      <Code css={page1}/>\n    </div>\n  )\n}\n","import React from 'react'\nimport Pen from '../Pen';\nimport './styles.css'\n\nexport default function ListOfPens ({ pens }) {\n  return <div className='ListOfPens'>\n    {\n      pens.map(pen => <Pen\n        key={pen.id}\n        id={pen.id}\n        name={pen.name}\n        description={pen.description}\n        code={pen.code}\n        />)\n    }\n  </div>\n}\n","export const API_URL = './pens.json'\n","import { API_URL } from './settings'\n\nconst parsePens = apiResponse => {\n  const { list = [] } = apiResponse\n\n  const pens = list.map(pen => {\n    const { id, name, description, code } = pen\n    return { id, name, description, code }\n  })\n\n  return pens\n}\n\nexport default function getPens () {\n  return fetch(API_URL)\n  .then(res => res.json())\n  .then(parsePens)\n}\n","import {useContext, useEffect, useState} from 'react'\nimport getPens from '../services/getPens'\nimport pensContext from '../context/PensContext'\n\nexport function usePens () {\n  const [loading, setLoading] = useState(false)\n  const {pens, setPens} = useContext(pensContext)\n\n  useEffect(function () {\n    setLoading(true)\n    getPens()\n      .then(pens => {\n        setPens(pens)\n        setLoading(false)\n      })\n  }, [setPens])\n\n  return { loading, pens }\n}\n","import React, { useEffect } from 'react'\nimport ListOfPens from '../../components/ListOfPens'\nimport { usePens } from '../../hooks/usePens'\n\nexport default function Home () {\n  const { loading, pens } = usePens()\n\n  useEffect(function () {\n    // console.log('efecto', pens)\n  }, [loading, pens])\n\n\n  return (\n    <div className='Page Home'>\n      <h2 className='Page__title'>Home</h2>\n\n      {loading\n        ? <div>loading</div>\n        : <ListOfPens pens={pens}/>\n      }\n\n    </div>\n  )\n}\n","import React from 'react'\nimport Code from '../../components/Code'\n\nexport default function Playground () {\n  return (\n    <div className='Page Playground'>\n      <h2 className='Page__title'>Playground</h2>\n\n      <Code css='.foo { display: block; }' />\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Author () {\n  return (\n    <div className='Page Author'>\n      <h2 className='Page__title'>Author</h2>\n    </div>\n  )\n}\n","import React from 'react'\nimport './styles.css'\nimport { Link } from 'wouter'\n\nexport default function Menu () {\n  return (\n    <nav className='Menu'>\n      <Link to='/' className='Menu__item'>Home</Link>\n      <Link to='/css' className='Menu__item'>Playground</Link>\n      <Link to='/author' className='Menu__item'>Author</Link>\n    </nav>\n  )\n}\n","import React from 'react'\nimport './styles.css'\nimport Menu from '../Menu'\n\nexport default function Header () {\n  return (\n    <div className='Header'>\n      <h1 className='Header__title'>CSS.Learn</h1>\n      <Menu/>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, Router } from 'wouter'\nimport useHashLocation from './hooks/useHashLocation'\nimport { PensContextProvider } from './context/PensContext'\nimport Home from './pages/Home'\nimport Playground from './pages/Playground'\nimport Author from './pages/Author'\nimport Header from './components/Header'\n\nexport default function App() {\n  return (\n    <div id='App' className='app'>\n      <PensContextProvider>\n        <Router hook={useHashLocation}>\n          <Header/>\n\n          <Route path='/' component={Home} />\n          <Route path='/css' component={Playground} />\n          <Route path='/author' component={Author} />\n        </Router>\n      </PensContextProvider>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}